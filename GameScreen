import greenfoot.*;// (World, Actor, GreenfootImage, Greenfoot and MouseInfo)
import java.util.ArrayList;
import java.util.Calendar;
/**
 * Screen where game is played (constructs objects in game)
 * Jaqueline Gomez
 */
public class GameScreen extends World
{
    private static int numDots=0;
    private static Calendar cal= Calendar.getInstance();
    private static int time= cal.get(Calendar.SECOND);
    private static int level;
    private String askLevel="Level";
    ArrayList<Dot> dots;
    Ball ball= new Ball();
    Board board= new Board();
    Bottom bottom= new Bottom();
    Middle mid= new Middle();
    Top t= new Top();
    public void act()
    {
     if(Ball.getRuns()==0)
       {
           resetTime(); 
        }//end if
     cal= Calendar.getInstance();
      time= cal.get(Calendar.SECOND); 
    }
    public GameScreen()
     {
        super(600,800,1);
        
          /** Setting speed*/
          Greenfoot.setSpeed(40);

          /**Ask and set level*/
           askLevel +=Greenfoot.ask("Level 1 or 2"); 
        if(askLevel.indexOf("2")!=-1)
        {
             level=2; 
             
         }//end if
        else
        {
            level=1;
        }//end else
            //Dot
            initializeNumDots();
            
                
            /**Resizing Ball*/
            
            resizeBall();
        
                    
            /** add Objects */
        
            //Ball
            addObject(ball,300,700);
            
            //Board
            addObject(board,300,750);
            
            //Bottom
            addObject(bottom,300,800);
            //Dot
            addDots();
            //Top /Middle line
            addObject(t, 300,201);
            addObject(mid,300,600);
            
        
        
            draw();
        /** Turn Ball*/
        
            ball.turn(-90);
           
               
            
}//end constructor

    /** ------------------------- Gettters--------------------*/
    //@returns level
    public static int getLevel()
    {
        return level;
    }//end getLevel
    
    //@returns number of dots
    public static int getNumDots()
    {
        return numDots;
    }//end getNumDots method
  
    //@returns time
    public static int getTime()
    {
    return time;
    }//end getTime
    
    

    /** ----------------------  Void Methods ---------------------*/
    
    
     /**Adds dots*/
    public void addDots()
    {
        int dotX= 50, dotY, newPlace;
        if( level==1)
        {
            dotY=273;
          newPlace=24;
        
       }//END IF
        else
        {
            dotY=225;
            newPlace=18;
        }//END ELSE 
       
            for(int i=0; i< numDots;i++)
            {
            
             dots.add(i, new Dot());
            
            if(i<newPlace)
            {
                if(i%6==0&&i!=0)
                {
                    dotY+=73;
                    dotX=50;
                    
                    }//end inner if
                
                addObject(dots.get(i),dotX,dotY);
                
            }//end outer if
            
            else
                {
                    if(i==newPlace)
                {
                     dotY=175;
                    dotX=50;
                }
                if(i%6==0&& i!=newPlace)
                {
                    dotY-=73;
                    
                    dotX=50;
                    
                    }//end if
                
                addObject(dots.get(i),dotX,dotY);
                
                }//end else
            
                dotX+=100;
            
            }//end for loop
    
    }//end addDots
    
    public void draw()
    {
        GreenfootImage bLNT= new GreenfootImage( "Scroll Down", 130, Color.WHITE, Color.BLACK);
         getBackground().drawImage(bLNT,10,20);
         
    }//end draw
    
    public void initializeNumDots()
    {
    if(level==1)
        {
        numDots =24;
        
        }//end if 
        else
        {
        numDots=42;
        }//end else
    dots=new ArrayList(numDots);
    }//end initializeNumDots
    
    /**resets time */
        public static void resetTime()
    {
        cal.set(Calendar.SECOND, 0);
        time=0;
    }//resets calendar time
    
     public void resizeBall()
     {
        GreenfootImage image = ball.getImage();
            image.scale(image.getWidth() - 40, image.getHeight() - 40);
            ball.setImage(image);
     }//end resizeBall
     
    //@param int num
   public static void setNumDots(int num)
    {
        numDots=num;
    }//end getNumDots method
    
    //@param int setTime
     public static void setTime(int setTime)
    {
        time=setTime;
    }//end getTime
     
}//end class GameScreen
